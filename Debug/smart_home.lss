
smart_home.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000130  00800100  00000ca2  00000d36  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ca2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000014a  00800230  00800230  00000e66  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000e66  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000e98  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  00000ed4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001ac8  00000000  00000000  00000fcc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bbd  00000000  00000000  00002a94  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bd7  00000000  00000000  00003651  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002c4  00000000  00000000  00004228  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000614  00000000  00000000  000044ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ca  00000000  00000000  00004b00  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  000052ca  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	1d c5       	rjmp	.+2618   	; 0xa6c <__vector_12>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	ee c5       	rjmp	.+3036   	; 0xc26 <__vector_18>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	ff c5       	rjmp	.+3070   	; 0xc78 <__vector_30>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	12 e0       	ldi	r17, 0x02	; 2
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 ea       	ldi	r30, 0xA2	; 162
  a0:	fc e0       	ldi	r31, 0x0C	; 12
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 33       	cpi	r26, 0x30	; 48
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	23 e0       	ldi	r18, 0x03	; 3
  b4:	a0 e3       	ldi	r26, 0x30	; 48
  b6:	b2 e0       	ldi	r27, 0x02	; 2
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	aa 37       	cpi	r26, 0x7A	; 122
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	ba d4       	rcall	.+2420   	; 0xa38 <main>
  c4:	ec c5       	rjmp	.+3032   	; 0xc9e <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <portini>:
volatile uint32_t lampa=0;


void portini()
{
	DDRA=0xff ; //relay kimenet
  c8:	8f ef       	ldi	r24, 0xFF	; 255
  ca:	8a bb       	out	0x1a, r24	; 26
	DDRC=0xff ; //relay kimenet
  cc:	84 bb       	out	0x14, r24	; 20
	DDRD=(1<<PD7)|(1<<PD6)|(1<<PD5); //relay kimenet
  ce:	80 ee       	ldi	r24, 0xE0	; 224
  d0:	81 bb       	out	0x11, r24	; 17
	DDRG=(1<<PG2)|(1<<PG4); // PG LED ek
  d2:	84 e1       	ldi	r24, 0x14	; 20
  d4:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
	DDRF=0;
  d8:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	DDRE=0;
  dc:	12 b8       	out	0x02, r1	; 2
	DDRB=0;
  de:	17 ba       	out	0x17, r1	; 23
  e0:	08 95       	ret

000000e2 <relay_out>:
}

void relay_out (uint32_t relay, uint8_t func)
{
	relayout=relay;
  e2:	60 93 43 02 	sts	0x0243, r22	; 0x800243 <relayout>
  e6:	70 93 44 02 	sts	0x0244, r23	; 0x800244 <relayout+0x1>
  ea:	80 93 45 02 	sts	0x0245, r24	; 0x800245 <relayout+0x2>
  ee:	90 93 46 02 	sts	0x0246, r25	; 0x800246 <relayout+0x3>
	
	if(func==3) //XOR
  f2:	43 30       	cpi	r20, 0x03	; 3
  f4:	69 f4       	brne	.+26     	; 0x110 <relay_out+0x2e>
		{
		PORTA^=relayout;
  f6:	8b b3       	in	r24, 0x1b	; 27
  f8:	68 27       	eor	r22, r24
  fa:	6b bb       	out	0x1b, r22	; 27
		PORTC^=(relayout>>8);
  fc:	95 b3       	in	r25, 0x15	; 21
  fe:	87 2f       	mov	r24, r23
 100:	89 27       	eor	r24, r25
 102:	85 bb       	out	0x15, r24	; 21
		PORTD^=(relayout>>16);
 104:	92 b3       	in	r25, 0x12	; 18
 106:	80 91 45 02 	lds	r24, 0x0245	; 0x800245 <relayout+0x2>
 10a:	89 27       	eor	r24, r25
 10c:	82 bb       	out	0x12, r24	; 18
 10e:	08 95       	ret
		}

	if(func==1) // OR
 110:	41 30       	cpi	r20, 0x01	; 1
 112:	71 f4       	brne	.+28     	; 0x130 <relay_out+0x4e>
		{
		PORTA|=relayout;
 114:	8b b3       	in	r24, 0x1b	; 27
 116:	68 2b       	or	r22, r24
 118:	6b bb       	out	0x1b, r22	; 27
		PORTC|=(relayout>>8);
 11a:	95 b3       	in	r25, 0x15	; 21
 11c:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <relayout+0x1>
 120:	89 2b       	or	r24, r25
 122:	85 bb       	out	0x15, r24	; 21
		PORTD|=(relayout>>16);
 124:	92 b3       	in	r25, 0x12	; 18
 126:	80 91 45 02 	lds	r24, 0x0245	; 0x800245 <relayout+0x2>
 12a:	89 2b       	or	r24, r25
 12c:	82 bb       	out	0x12, r24	; 18
 12e:	08 95       	ret
		}

	if(func==0) //AND
 130:	41 11       	cpse	r20, r1
 132:	12 c0       	rjmp	.+36     	; 0x158 <relay_out+0x76>
		{
		PORTA&=~relayout;
 134:	9b b3       	in	r25, 0x1b	; 27
 136:	80 91 43 02 	lds	r24, 0x0243	; 0x800243 <relayout>
 13a:	80 95       	com	r24
 13c:	89 23       	and	r24, r25
 13e:	8b bb       	out	0x1b, r24	; 27
		PORTC&=~(relayout>>8);
 140:	95 b3       	in	r25, 0x15	; 21
 142:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <relayout+0x1>
 146:	80 95       	com	r24
 148:	89 23       	and	r24, r25
 14a:	85 bb       	out	0x15, r24	; 21
		PORTD&=~(relayout>>16);
 14c:	92 b3       	in	r25, 0x12	; 18
 14e:	80 91 45 02 	lds	r24, 0x0245	; 0x800245 <relayout+0x2>
 152:	80 95       	com	r24
 154:	89 23       	and	r24, r25
 156:	82 bb       	out	0x12, r24	; 18
 158:	08 95       	ret

0000015a <ledblink>:

}

void ledblink(uint8_t blinkfreq)
{
	tmpled++;
 15a:	90 91 42 02 	lds	r25, 0x0242	; 0x800242 <tmpled>
 15e:	9f 5f       	subi	r25, 0xFF	; 255
	
	if (tmpled>blinkfreq)
 160:	89 17       	cp	r24, r25
 162:	18 f0       	brcs	.+6      	; 0x16a <ledblink+0x10>

}

void ledblink(uint8_t blinkfreq)
{
	tmpled++;
 164:	90 93 42 02 	sts	0x0242, r25	; 0x800242 <tmpled>
 168:	08 95       	ret
	
	if (tmpled>blinkfreq)
	{
		tmpled=0;
 16a:	10 92 42 02 	sts	0x0242, r1	; 0x800242 <tmpled>
		PORTG^=(1<<PG2);
 16e:	e5 e6       	ldi	r30, 0x65	; 101
 170:	f0 e0       	ldi	r31, 0x00	; 0
 172:	90 81       	ld	r25, Z
 174:	84 e0       	ldi	r24, 0x04	; 4
 176:	89 27       	eor	r24, r25
 178:	80 83       	st	Z, r24
 17a:	08 95       	ret

0000017c <timer_setrelayfunc>:
	}
}

void timer_setrelayfunc()
{
	if (INPF7) PF7timer++; //gombnyomási mérése
 17c:	07 99       	sbic	0x00, 7	; 0
 17e:	05 c0       	rjmp	.+10     	; 0x18a <timer_setrelayfunc+0xe>
 180:	80 91 3d 02 	lds	r24, 0x023D	; 0x80023d <PF7timer>
 184:	8f 5f       	subi	r24, 0xFF	; 255
 186:	80 93 3d 02 	sts	0x023D, r24	; 0x80023d <PF7timer>
		
	if (PF7timer==PUSHTIME) //ha az ido eltelt bekapcsolja a kimenetet ezzel jelzi
 18a:	80 91 3d 02 	lds	r24, 0x023D	; 0x80023d <PF7timer>
 18e:	87 30       	cpi	r24, 0x07	; 7
 190:	b9 f4       	brne	.+46     	; 0x1c0 <timer_setrelayfunc+0x44>
		{
			PF7startidozito=0; // hogyan idozitsek ? hosszu vagy rovid gombnyomásra ?
 192:	10 92 3e 02 	sts	0x023E, r1	; 0x80023e <PF7startidozito>
			
			PF7lampa=3;
 196:	83 e0       	ldi	r24, 0x03	; 3
 198:	80 93 3c 02 	sts	0x023C, r24	; 0x80023c <PF7lampa>
			PF6lampa==3;
			PF5lampa==3;
			
			relay_out(RelayPA0,1);
 19c:	41 e0       	ldi	r20, 0x01	; 1
 19e:	61 e0       	ldi	r22, 0x01	; 1
 1a0:	70 e0       	ldi	r23, 0x00	; 0
 1a2:	80 e0       	ldi	r24, 0x00	; 0
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	9d df       	rcall	.-198    	; 0xe2 <relay_out>
			relay_out(RelayPA1,1);
 1a8:	41 e0       	ldi	r20, 0x01	; 1
 1aa:	62 e0       	ldi	r22, 0x02	; 2
 1ac:	70 e0       	ldi	r23, 0x00	; 0
 1ae:	80 e0       	ldi	r24, 0x00	; 0
 1b0:	90 e0       	ldi	r25, 0x00	; 0
 1b2:	97 df       	rcall	.-210    	; 0xe2 <relay_out>
			relay_out(RelayPA2,1);
 1b4:	41 e0       	ldi	r20, 0x01	; 1
 1b6:	64 e0       	ldi	r22, 0x04	; 4
 1b8:	70 e0       	ldi	r23, 0x00	; 0
 1ba:	80 e0       	ldi	r24, 0x00	; 0
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	91 df       	rcall	.-222    	; 0xe2 <relay_out>
		}
		



	if(INPF7 && PF7gny==0 ) //lenyomas gomb
 1c0:	07 99       	sbic	0x00, 7	; 0
 1c2:	12 c0       	rjmp	.+36     	; 0x1e8 <timer_setrelayfunc+0x6c>
 1c4:	80 91 3f 02 	lds	r24, 0x023F	; 0x80023f <PF7gny>
 1c8:	81 11       	cpse	r24, r1
 1ca:	0e c0       	rjmp	.+28     	; 0x1e8 <timer_setrelayfunc+0x6c>
	{
		PF7gny=1;
 1cc:	81 e0       	ldi	r24, 0x01	; 1
 1ce:	80 93 3f 02 	sts	0x023F, r24	; 0x80023f <PF7gny>
		PF7timer=0;
 1d2:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <PF7timer>
		PF7startidozito=1;
 1d6:	80 93 3e 02 	sts	0x023E, r24	; 0x80023e <PF7startidozito>
		PF7tim=0;			  // hogyan idozitsek ? hosszu vagy rovid gombnyomásra ?
 1da:	10 92 41 02 	sts	0x0241, r1	; 0x800241 <PF7tim+0x1>
 1de:	10 92 40 02 	sts	0x0240, r1	; 0x800240 <PF7tim>
	}

	if((!INPF7) && PF7gny==1) //felengedés
 1e2:	07 9b       	sbis	0x00, 7	; 0
 1e4:	a3 c0       	rjmp	.+326    	; 0x32c <timer_setrelayfunc+0x1b0>
 1e6:	07 c0       	rjmp	.+14     	; 0x1f6 <timer_setrelayfunc+0x7a>
 1e8:	07 9b       	sbis	0x00, 7	; 0
 1ea:	9c c0       	rjmp	.+312    	; 0x324 <timer_setrelayfunc+0x1a8>
 1ec:	80 91 3f 02 	lds	r24, 0x023F	; 0x80023f <PF7gny>
 1f0:	81 30       	cpi	r24, 0x01	; 1
 1f2:	09 f0       	breq	.+2      	; 0x1f6 <timer_setrelayfunc+0x7a>
 1f4:	97 c0       	rjmp	.+302    	; 0x324 <timer_setrelayfunc+0x1a8>
	{
	PF7gny=0;
 1f6:	10 92 3f 02 	sts	0x023F, r1	; 0x80023f <PF7gny>
		if (PF7timer>=PUSHTIME)
 1fa:	80 91 3d 02 	lds	r24, 0x023D	; 0x80023d <PF7timer>
 1fe:	87 30       	cpi	r24, 0x07	; 7
 200:	38 f0       	brcs	.+14     	; 0x210 <timer_setrelayfunc+0x94>
		{
		PF7timer=0;
 202:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <PF7timer>
		PF7tim=0;
 206:	10 92 41 02 	sts	0x0241, r1	; 0x800241 <PF7tim+0x1>
 20a:	10 92 40 02 	sts	0x0240, r1	; 0x800240 <PF7tim>
 20e:	8a c0       	rjmp	.+276    	; 0x324 <timer_setrelayfunc+0x1a8>
		}
		else 
		{
		PF7timer=0;
 210:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <PF7timer>

			switch(PF7lampa)
 214:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <PF7lampa>
 218:	81 30       	cpi	r24, 0x01	; 1
 21a:	49 f1       	breq	.+82     	; 0x26e <timer_setrelayfunc+0xf2>
 21c:	20 f0       	brcs	.+8      	; 0x226 <timer_setrelayfunc+0xaa>
 21e:	83 30       	cpi	r24, 0x03	; 3
 220:	09 f4       	brne	.+2      	; 0x224 <timer_setrelayfunc+0xa8>
 222:	4c c0       	rjmp	.+152    	; 0x2bc <timer_setrelayfunc+0x140>
 224:	7f c0       	rjmp	.+254    	; 0x324 <timer_setrelayfunc+0x1a8>
			{	case 0:
					{
					PF7lampa=1;
 226:	81 e0       	ldi	r24, 0x01	; 1
 228:	80 93 3c 02 	sts	0x023C, r24	; 0x80023c <PF7lampa>
					if (PF5lampa==0) PF5lampa=3;
 22c:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <PF5lampa>
 230:	81 11       	cpse	r24, r1
 232:	03 c0       	rjmp	.+6      	; 0x23a <timer_setrelayfunc+0xbe>
 234:	83 e0       	ldi	r24, 0x03	; 3
 236:	80 93 38 02 	sts	0x0238, r24	; 0x800238 <PF5lampa>
					if (PF6lampa==0) PF6lampa=3;
 23a:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <PF6lampa>
 23e:	81 11       	cpse	r24, r1
 240:	03 c0       	rjmp	.+6      	; 0x248 <timer_setrelayfunc+0xcc>
 242:	83 e0       	ldi	r24, 0x03	; 3
 244:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <PF6lampa>
					relay_out(RelayPA0,1);
 248:	41 e0       	ldi	r20, 0x01	; 1
 24a:	61 e0       	ldi	r22, 0x01	; 1
 24c:	70 e0       	ldi	r23, 0x00	; 0
 24e:	80 e0       	ldi	r24, 0x00	; 0
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	47 df       	rcall	.-370    	; 0xe2 <relay_out>
					relay_out(RelayPA1,1);
 254:	41 e0       	ldi	r20, 0x01	; 1
 256:	62 e0       	ldi	r22, 0x02	; 2
 258:	70 e0       	ldi	r23, 0x00	; 0
 25a:	80 e0       	ldi	r24, 0x00	; 0
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	41 df       	rcall	.-382    	; 0xe2 <relay_out>
					relay_out(RelayPA2,1);
 260:	41 e0       	ldi	r20, 0x01	; 1
 262:	64 e0       	ldi	r22, 0x04	; 4
 264:	70 e0       	ldi	r23, 0x00	; 0
 266:	80 e0       	ldi	r24, 0x00	; 0
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	3b df       	rcall	.-394    	; 0xe2 <relay_out>
					break;
 26c:	5b c0       	rjmp	.+182    	; 0x324 <timer_setrelayfunc+0x1a8>
					}
				
				case 1:
					{
					PF7lampa=0;
 26e:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <PF7lampa>
					
					relay_out(RelayPA0,0);
 272:	40 e0       	ldi	r20, 0x00	; 0
 274:	61 e0       	ldi	r22, 0x01	; 1
 276:	70 e0       	ldi	r23, 0x00	; 0
 278:	80 e0       	ldi	r24, 0x00	; 0
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	32 df       	rcall	.-412    	; 0xe2 <relay_out>
					if (PF6lampa==3){relay_out(RelayPA1,0);PF6lampa=0;}
 27e:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <PF6lampa>
 282:	83 30       	cpi	r24, 0x03	; 3
 284:	41 f4       	brne	.+16     	; 0x296 <timer_setrelayfunc+0x11a>
 286:	40 e0       	ldi	r20, 0x00	; 0
 288:	62 e0       	ldi	r22, 0x02	; 2
 28a:	70 e0       	ldi	r23, 0x00	; 0
 28c:	80 e0       	ldi	r24, 0x00	; 0
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	28 df       	rcall	.-432    	; 0xe2 <relay_out>
 292:	10 92 3a 02 	sts	0x023A, r1	; 0x80023a <PF6lampa>
					if (PF5lampa==3){relay_out(RelayPA2,0);PF5lampa=0;}
 296:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <PF5lampa>
 29a:	83 30       	cpi	r24, 0x03	; 3
 29c:	41 f4       	brne	.+16     	; 0x2ae <timer_setrelayfunc+0x132>
 29e:	40 e0       	ldi	r20, 0x00	; 0
 2a0:	64 e0       	ldi	r22, 0x04	; 4
 2a2:	70 e0       	ldi	r23, 0x00	; 0
 2a4:	80 e0       	ldi	r24, 0x00	; 0
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	1c df       	rcall	.-456    	; 0xe2 <relay_out>
 2aa:	10 92 38 02 	sts	0x0238, r1	; 0x800238 <PF5lampa>
					PF7startidozito=0;
 2ae:	10 92 3e 02 	sts	0x023E, r1	; 0x80023e <PF7startidozito>
					PF7tim=0;	
 2b2:	10 92 41 02 	sts	0x0241, r1	; 0x800241 <PF7tim+0x1>
 2b6:	10 92 40 02 	sts	0x0240, r1	; 0x800240 <PF7tim>
					break;
					}
			
				case 3:
					{
					PF7lampa=0;
 2ba:	68 c0       	rjmp	.+208    	; 0x38c <timer_setrelayfunc+0x210>
 2bc:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <PF7lampa>
					relay_out(RelayPA0,0);
 2c0:	40 e0       	ldi	r20, 0x00	; 0
 2c2:	61 e0       	ldi	r22, 0x01	; 1
 2c4:	70 e0       	ldi	r23, 0x00	; 0
 2c6:	80 e0       	ldi	r24, 0x00	; 0
 2c8:	90 e0       	ldi	r25, 0x00	; 0
					if (PF6lampa==0){relay_out(RelayPA1,0);}
 2ca:	0b df       	rcall	.-490    	; 0xe2 <relay_out>
 2cc:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <PF6lampa>
 2d0:	81 11       	cpse	r24, r1
 2d2:	06 c0       	rjmp	.+12     	; 0x2e0 <timer_setrelayfunc+0x164>
 2d4:	40 e0       	ldi	r20, 0x00	; 0
 2d6:	62 e0       	ldi	r22, 0x02	; 2
 2d8:	70 e0       	ldi	r23, 0x00	; 0
 2da:	80 e0       	ldi	r24, 0x00	; 0
 2dc:	90 e0       	ldi	r25, 0x00	; 0
					if (PF5lampa==0){relay_out(RelayPA2,0);}
 2de:	01 df       	rcall	.-510    	; 0xe2 <relay_out>
 2e0:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <PF5lampa>
 2e4:	81 11       	cpse	r24, r1
 2e6:	06 c0       	rjmp	.+12     	; 0x2f4 <timer_setrelayfunc+0x178>
 2e8:	40 e0       	ldi	r20, 0x00	; 0
 2ea:	64 e0       	ldi	r22, 0x04	; 4
 2ec:	70 e0       	ldi	r23, 0x00	; 0
 2ee:	80 e0       	ldi	r24, 0x00	; 0
 2f0:	90 e0       	ldi	r25, 0x00	; 0
					if (PF6lampa==3){relay_out(RelayPA1,0);PF6lampa=0;}
 2f2:	f7 de       	rcall	.-530    	; 0xe2 <relay_out>
 2f4:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <PF6lampa>
 2f8:	83 30       	cpi	r24, 0x03	; 3
 2fa:	41 f4       	brne	.+16     	; 0x30c <timer_setrelayfunc+0x190>
 2fc:	40 e0       	ldi	r20, 0x00	; 0
 2fe:	62 e0       	ldi	r22, 0x02	; 2
 300:	70 e0       	ldi	r23, 0x00	; 0
 302:	80 e0       	ldi	r24, 0x00	; 0
 304:	90 e0       	ldi	r25, 0x00	; 0
 306:	ed de       	rcall	.-550    	; 0xe2 <relay_out>
 308:	10 92 3a 02 	sts	0x023A, r1	; 0x80023a <PF6lampa>
					if (PF5lampa==3){relay_out(RelayPA2,0);PF5lampa=0;}
 30c:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <PF5lampa>
 310:	83 30       	cpi	r24, 0x03	; 3
 312:	41 f4       	brne	.+16     	; 0x324 <timer_setrelayfunc+0x1a8>
 314:	40 e0       	ldi	r20, 0x00	; 0
 316:	64 e0       	ldi	r22, 0x04	; 4
 318:	70 e0       	ldi	r23, 0x00	; 0
 31a:	80 e0       	ldi	r24, 0x00	; 0
 31c:	90 e0       	ldi	r25, 0x00	; 0
 31e:	e1 de       	rcall	.-574    	; 0xe2 <relay_out>
 320:	10 92 38 02 	sts	0x0238, r1	; 0x800238 <PF5lampa>
			}
		}
	}
	
	
	if (PF7startidozito==1) // késleltett ido kikapcsolás engedélyezése
 324:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <PF7startidozito>
 328:	81 30       	cpi	r24, 0x01	; 1
 32a:	81 f5       	brne	.+96     	; 0x38c <timer_setrelayfunc+0x210>
	{
		PF7tim++;
 32c:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <PF7tim>
 330:	90 91 41 02 	lds	r25, 0x0241	; 0x800241 <PF7tim+0x1>
 334:	01 96       	adiw	r24, 0x01	; 1
 336:	90 93 41 02 	sts	0x0241, r25	; 0x800241 <PF7tim+0x1>
 33a:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <PF7tim>
		if (PF7tim==PF7TIMER)  // mennyi ido után kapcsoljon ki
 33e:	88 30       	cpi	r24, 0x08	; 8
 340:	97 40       	sbci	r25, 0x07	; 7
		{
			PF7tim=0;
 342:	21 f5       	brne	.+72     	; 0x38c <timer_setrelayfunc+0x210>
 344:	10 92 41 02 	sts	0x0241, r1	; 0x800241 <PF7tim+0x1>
 348:	10 92 40 02 	sts	0x0240, r1	; 0x800240 <PF7tim>
			PF7lampa=0;
 34c:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <PF7lampa>
			relay_out(RelayPA0,0);
 350:	40 e0       	ldi	r20, 0x00	; 0
 352:	61 e0       	ldi	r22, 0x01	; 1
 354:	70 e0       	ldi	r23, 0x00	; 0
 356:	80 e0       	ldi	r24, 0x00	; 0
 358:	90 e0       	ldi	r25, 0x00	; 0
			if (PF6lampa==3) 
 35a:	c3 de       	rcall	.-634    	; 0xe2 <relay_out>
 35c:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <PF6lampa>
 360:	83 30       	cpi	r24, 0x03	; 3
				{
				relay_out(RelayPA1,0);
 362:	41 f4       	brne	.+16     	; 0x374 <timer_setrelayfunc+0x1f8>
 364:	40 e0       	ldi	r20, 0x00	; 0
 366:	62 e0       	ldi	r22, 0x02	; 2
 368:	70 e0       	ldi	r23, 0x00	; 0
 36a:	80 e0       	ldi	r24, 0x00	; 0
 36c:	90 e0       	ldi	r25, 0x00	; 0
				PF6lampa=0;
 36e:	b9 de       	rcall	.-654    	; 0xe2 <relay_out>
 370:	10 92 3a 02 	sts	0x023A, r1	; 0x80023a <PF6lampa>
				}
			if (PF5lampa==3)
 374:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <PF5lampa>
 378:	83 30       	cpi	r24, 0x03	; 3
				{
				relay_out(RelayPA2,0);
 37a:	41 f4       	brne	.+16     	; 0x38c <timer_setrelayfunc+0x210>
 37c:	40 e0       	ldi	r20, 0x00	; 0
 37e:	64 e0       	ldi	r22, 0x04	; 4
 380:	70 e0       	ldi	r23, 0x00	; 0
 382:	80 e0       	ldi	r24, 0x00	; 0
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	ad de       	rcall	.-678    	; 0xe2 <relay_out>
				PF5lampa=0;
 388:	10 92 38 02 	sts	0x0238, r1	; 0x800238 <PF5lampa>





	if(INPF6 && PF6gny==0 ) //lenyomas gomb
 38c:	06 99       	sbic	0x00, 6	; 0
 38e:	0a c0       	rjmp	.+20     	; 0x3a4 <timer_setrelayfunc+0x228>
 390:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <PF6gny>
 394:	81 11       	cpse	r24, r1
 396:	06 c0       	rjmp	.+12     	; 0x3a4 <timer_setrelayfunc+0x228>
	{
		PF6gny=1;
 398:	81 e0       	ldi	r24, 0x01	; 1
 39a:	80 93 3b 02 	sts	0x023B, r24	; 0x80023b <PF6gny>
	}

	if((!INPF6) && PF6gny==1) //felengedés
 39e:	06 99       	sbic	0x00, 6	; 0
 3a0:	07 c0       	rjmp	.+14     	; 0x3b0 <timer_setrelayfunc+0x234>
 3a2:	1e c0       	rjmp	.+60     	; 0x3e0 <timer_setrelayfunc+0x264>
 3a4:	06 9b       	sbis	0x00, 6	; 0
 3a6:	1c c0       	rjmp	.+56     	; 0x3e0 <timer_setrelayfunc+0x264>
 3a8:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <PF6gny>
 3ac:	81 30       	cpi	r24, 0x01	; 1
	{
		PF6gny=0;
 3ae:	c1 f4       	brne	.+48     	; 0x3e0 <timer_setrelayfunc+0x264>
 3b0:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <PF6gny>
		
			if (PF6lampa==0)
 3b4:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <PF6lampa>
 3b8:	81 11       	cpse	r24, r1
			{
			PF6lampa=1;
 3ba:	0a c0       	rjmp	.+20     	; 0x3d0 <timer_setrelayfunc+0x254>
 3bc:	81 e0       	ldi	r24, 0x01	; 1
			relay_out(RelayPA1,1);
 3be:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <PF6lampa>
 3c2:	41 e0       	ldi	r20, 0x01	; 1
 3c4:	62 e0       	ldi	r22, 0x02	; 2
 3c6:	70 e0       	ldi	r23, 0x00	; 0
 3c8:	80 e0       	ldi	r24, 0x00	; 0
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	8a de       	rcall	.-748    	; 0xe2 <relay_out>
			}
			else
			{
			PF6lampa=0;
 3ce:	08 c0       	rjmp	.+16     	; 0x3e0 <timer_setrelayfunc+0x264>
 3d0:	10 92 3a 02 	sts	0x023A, r1	; 0x80023a <PF6lampa>
			relay_out(RelayPA1,0);	
 3d4:	40 e0       	ldi	r20, 0x00	; 0
 3d6:	62 e0       	ldi	r22, 0x02	; 2
 3d8:	70 e0       	ldi	r23, 0x00	; 0
 3da:	80 e0       	ldi	r24, 0x00	; 0
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	81 de       	rcall	.-766    	; 0xe2 <relay_out>
	
	
	
	
	
	if(INPF5 && PF5gny==0 ) //lenyomas gomb
 3e0:	05 99       	sbic	0x00, 5	; 0
 3e2:	0a c0       	rjmp	.+20     	; 0x3f8 <timer_setrelayfunc+0x27c>
 3e4:	80 91 39 02 	lds	r24, 0x0239	; 0x800239 <PF5gny>
 3e8:	81 11       	cpse	r24, r1
 3ea:	06 c0       	rjmp	.+12     	; 0x3f8 <timer_setrelayfunc+0x27c>
	{
		PF5gny=1;
 3ec:	81 e0       	ldi	r24, 0x01	; 1
 3ee:	80 93 39 02 	sts	0x0239, r24	; 0x800239 <PF5gny>
	}

	if((!INPF5) && PF5gny==1) //felengedés
 3f2:	05 99       	sbic	0x00, 5	; 0
 3f4:	07 c0       	rjmp	.+14     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3f6:	08 95       	ret
 3f8:	05 9b       	sbis	0x00, 5	; 0
 3fa:	1c c0       	rjmp	.+56     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 3fc:	80 91 39 02 	lds	r24, 0x0239	; 0x800239 <PF5gny>
 400:	81 30       	cpi	r24, 0x01	; 1
	{
		PF5gny=0;
 402:	c1 f4       	brne	.+48     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 404:	10 92 39 02 	sts	0x0239, r1	; 0x800239 <PF5gny>
		
		if (PF5lampa==0)
 408:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <PF5lampa>
		{
			PF5lampa=1;
 40c:	81 11       	cpse	r24, r1
 40e:	0a c0       	rjmp	.+20     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 410:	81 e0       	ldi	r24, 0x01	; 1
			relay_out(RelayPA2,1);
 412:	80 93 38 02 	sts	0x0238, r24	; 0x800238 <PF5lampa>
 416:	41 e0       	ldi	r20, 0x01	; 1
 418:	64 e0       	ldi	r22, 0x04	; 4
 41a:	70 e0       	ldi	r23, 0x00	; 0
 41c:	80 e0       	ldi	r24, 0x00	; 0
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	60 ce       	rjmp	.-832    	; 0xe2 <relay_out>
		}
		else
		{
			PF5lampa=0;
 422:	08 95       	ret
 424:	10 92 38 02 	sts	0x0238, r1	; 0x800238 <PF5lampa>
			relay_out(RelayPA2,0);
 428:	40 e0       	ldi	r20, 0x00	; 0
 42a:	64 e0       	ldi	r22, 0x04	; 4
 42c:	70 e0       	ldi	r23, 0x00	; 0
 42e:	80 e0       	ldi	r24, 0x00	; 0
 430:	90 e0       	ldi	r25, 0x00	; 0
 432:	57 ce       	rjmp	.-850    	; 0xe2 <relay_out>
 434:	08 95       	ret

00000436 <set_relay>:
	

}

void set_relay(uint8_t readpin, uint32_t setrelay, uint8_t intmp, char *mqttcommand)
{
 436:	4f 92       	push	r4
 438:	5f 92       	push	r5
 43a:	6f 92       	push	r6
 43c:	7f 92       	push	r7
 43e:	8f 92       	push	r8
 440:	9f 92       	push	r9
 442:	af 92       	push	r10
 444:	bf 92       	push	r11
 446:	cf 92       	push	r12
 448:	df 92       	push	r13
 44a:	ef 92       	push	r14
 44c:	ff 92       	push	r15
 44e:	0f 93       	push	r16
 450:	1f 93       	push	r17
	if(readpin && !(gny&((uint32_t)1<<intmp)) ) //lenyomas gomb
 452:	88 23       	and	r24, r24
 454:	09 f4       	brne	.+2      	; 0x458 <set_relay+0x22>
 456:	b1 c0       	rjmp	.+354    	; 0x5ba <set_relay+0x184>
 458:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <gny>
 45c:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <gny+0x1>
 460:	a0 91 36 02 	lds	r26, 0x0236	; 0x800236 <gny+0x2>
 464:	b0 91 37 02 	lds	r27, 0x0237	; 0x800237 <gny+0x3>
 468:	02 2e       	mov	r0, r18
 46a:	04 c0       	rjmp	.+8      	; 0x474 <set_relay+0x3e>
 46c:	b6 95       	lsr	r27
 46e:	a7 95       	ror	r26
 470:	97 95       	ror	r25
 472:	87 95       	ror	r24
 474:	0a 94       	dec	r0
 476:	d2 f7       	brpl	.-12     	; 0x46c <set_relay+0x36>
 478:	80 fd       	sbrc	r24, 0
 47a:	b1 c0       	rjmp	.+354    	; 0x5de <set_relay+0x1a8>
	{
		gny=gny|((uint32_t)1<<intmp);
 47c:	40 91 34 02 	lds	r20, 0x0234	; 0x800234 <gny>
 480:	50 91 35 02 	lds	r21, 0x0235	; 0x800235 <gny+0x1>
 484:	60 91 36 02 	lds	r22, 0x0236	; 0x800236 <gny+0x2>
 488:	70 91 37 02 	lds	r23, 0x0237	; 0x800237 <gny+0x3>
 48c:	81 e0       	ldi	r24, 0x01	; 1
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	a0 e0       	ldi	r26, 0x00	; 0
 492:	b0 e0       	ldi	r27, 0x00	; 0
 494:	04 c0       	rjmp	.+8      	; 0x49e <set_relay+0x68>
 496:	88 0f       	add	r24, r24
 498:	99 1f       	adc	r25, r25
 49a:	aa 1f       	adc	r26, r26
 49c:	bb 1f       	adc	r27, r27
 49e:	2a 95       	dec	r18
 4a0:	d2 f7       	brpl	.-12     	; 0x496 <set_relay+0x60>
 4a2:	84 2b       	or	r24, r20
 4a4:	95 2b       	or	r25, r21
 4a6:	a6 2b       	or	r26, r22
 4a8:	b7 2b       	or	r27, r23
 4aa:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <gny>
 4ae:	90 93 35 02 	sts	0x0235, r25	; 0x800235 <gny+0x1>
 4b2:	a0 93 36 02 	sts	0x0236, r26	; 0x800236 <gny+0x2>
 4b6:	b0 93 37 02 	sts	0x0237, r27	; 0x800237 <gny+0x3>
 4ba:	91 c0       	rjmp	.+290    	; 0x5de <set_relay+0x1a8>
 4bc:	6a 01       	movw	r12, r20
 4be:	7b 01       	movw	r14, r22
	}

	if(!(readpin) && (gny&((uint32_t)1<<intmp)) ) //felengedés
	{
		gny=gny&(~((uint32_t)1<<intmp));
 4c0:	81 2c       	mov	r8, r1
 4c2:	91 2c       	mov	r9, r1
 4c4:	54 01       	movw	r10, r8
 4c6:	83 94       	inc	r8
 4c8:	02 2e       	mov	r0, r18
 4ca:	04 c0       	rjmp	.+8      	; 0x4d4 <set_relay+0x9e>
 4cc:	88 0c       	add	r8, r8
 4ce:	99 1c       	adc	r9, r9
 4d0:	aa 1c       	adc	r10, r10
 4d2:	bb 1c       	adc	r11, r11
 4d4:	0a 94       	dec	r0
 4d6:	d2 f7       	brpl	.-12     	; 0x4cc <set_relay+0x96>
 4d8:	24 01       	movw	r4, r8
 4da:	35 01       	movw	r6, r10
 4dc:	40 94       	com	r4
 4de:	50 94       	com	r5
 4e0:	60 94       	com	r6
 4e2:	70 94       	com	r7
 4e4:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <gny>
 4e8:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <gny+0x1>
 4ec:	a0 91 36 02 	lds	r26, 0x0236	; 0x800236 <gny+0x2>
 4f0:	b0 91 37 02 	lds	r27, 0x0237	; 0x800237 <gny+0x3>
 4f4:	84 21       	and	r24, r4
 4f6:	95 21       	and	r25, r5
 4f8:	a6 21       	and	r26, r6
 4fa:	b7 21       	and	r27, r7
 4fc:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <gny>
 500:	90 93 35 02 	sts	0x0235, r25	; 0x800235 <gny+0x1>
 504:	a0 93 36 02 	sts	0x0236, r26	; 0x800236 <gny+0x2>
 508:	b0 93 37 02 	sts	0x0237, r27	; 0x800237 <gny+0x3>
		
		if ( !(lampa&((uint32_t)1<<intmp)) )
 50c:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <__data_end>
 510:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <__data_end+0x1>
 514:	a0 91 32 02 	lds	r26, 0x0232	; 0x800232 <__data_end+0x2>
 518:	b0 91 33 02 	lds	r27, 0x0233	; 0x800233 <__data_end+0x3>
 51c:	04 c0       	rjmp	.+8      	; 0x526 <set_relay+0xf0>
 51e:	b6 95       	lsr	r27
 520:	a7 95       	ror	r26
 522:	97 95       	ror	r25
 524:	87 95       	ror	r24
 526:	2a 95       	dec	r18
 528:	d2 f7       	brpl	.-12     	; 0x51e <set_relay+0xe8>
 52a:	80 fd       	sbrc	r24, 0
 52c:	23 c0       	rjmp	.+70     	; 0x574 <set_relay+0x13e>
		{	
			USART0_putstring(mqttcommand);
 52e:	c8 01       	movw	r24, r16
 530:	ba d1       	rcall	.+884    	; 0x8a6 <USART0_putstring>
			USART1_putstring(mqttcommand);
 532:	c8 01       	movw	r24, r16
 534:	ce d1       	rcall	.+924    	; 0x8d2 <USART1_putstring>
			USART0_putstring(":ON\n");
 536:	80 e0       	ldi	r24, 0x00	; 0
 538:	91 e0       	ldi	r25, 0x01	; 1
 53a:	b5 d1       	rcall	.+874    	; 0x8a6 <USART0_putstring>
			USART1_putstring(":ON\n\r");
 53c:	85 e0       	ldi	r24, 0x05	; 5
 53e:	91 e0       	ldi	r25, 0x01	; 1
 540:	c8 d1       	rcall	.+912    	; 0x8d2 <USART1_putstring>
 542:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <__data_end>
			lampa|=((uint32_t)1<<intmp);
 546:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <__data_end+0x1>
 54a:	a0 91 32 02 	lds	r26, 0x0232	; 0x800232 <__data_end+0x2>
 54e:	b0 91 33 02 	lds	r27, 0x0233	; 0x800233 <__data_end+0x3>
 552:	88 2a       	or	r8, r24
 554:	99 2a       	or	r9, r25
 556:	aa 2a       	or	r10, r26
 558:	bb 2a       	or	r11, r27
 55a:	80 92 30 02 	sts	0x0230, r8	; 0x800230 <__data_end>
 55e:	90 92 31 02 	sts	0x0231, r9	; 0x800231 <__data_end+0x1>
 562:	a0 92 32 02 	sts	0x0232, r10	; 0x800232 <__data_end+0x2>
 566:	b0 92 33 02 	sts	0x0233, r11	; 0x800233 <__data_end+0x3>
			relay_out(setrelay,1);
 56a:	41 e0       	ldi	r20, 0x01	; 1
 56c:	c7 01       	movw	r24, r14
 56e:	b6 01       	movw	r22, r12
 570:	b8 dd       	rcall	.-1168   	; 0xe2 <relay_out>
		}
		else
		{	
			USART0_putstring(mqttcommand);
 572:	35 c0       	rjmp	.+106    	; 0x5de <set_relay+0x1a8>
 574:	c8 01       	movw	r24, r16
			USART1_putstring(mqttcommand);
 576:	97 d1       	rcall	.+814    	; 0x8a6 <USART0_putstring>
 578:	c8 01       	movw	r24, r16
			USART0_putstring(":OFF\n");
 57a:	ab d1       	rcall	.+854    	; 0x8d2 <USART1_putstring>
 57c:	8b e0       	ldi	r24, 0x0B	; 11
 57e:	91 e0       	ldi	r25, 0x01	; 1
 580:	92 d1       	rcall	.+804    	; 0x8a6 <USART0_putstring>
			USART1_putstring(":OFF\n\r");
 582:	81 e1       	ldi	r24, 0x11	; 17
 584:	91 e0       	ldi	r25, 0x01	; 1
 586:	a5 d1       	rcall	.+842    	; 0x8d2 <USART1_putstring>
 588:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <__data_end>
			lampa&=(~((uint32_t)1<<intmp));
 58c:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <__data_end+0x1>
 590:	a0 91 32 02 	lds	r26, 0x0232	; 0x800232 <__data_end+0x2>
 594:	b0 91 33 02 	lds	r27, 0x0233	; 0x800233 <__data_end+0x3>
 598:	48 22       	and	r4, r24
 59a:	59 22       	and	r5, r25
 59c:	6a 22       	and	r6, r26
 59e:	7b 22       	and	r7, r27
 5a0:	40 92 30 02 	sts	0x0230, r4	; 0x800230 <__data_end>
 5a4:	50 92 31 02 	sts	0x0231, r5	; 0x800231 <__data_end+0x1>
 5a8:	60 92 32 02 	sts	0x0232, r6	; 0x800232 <__data_end+0x2>
 5ac:	70 92 33 02 	sts	0x0233, r7	; 0x800233 <__data_end+0x3>
			relay_out(setrelay,0);
 5b0:	40 e0       	ldi	r20, 0x00	; 0
 5b2:	c7 01       	movw	r24, r14
 5b4:	b6 01       	movw	r22, r12
 5b6:	95 dd       	rcall	.-1238   	; 0xe2 <relay_out>
 5b8:	12 c0       	rjmp	.+36     	; 0x5de <set_relay+0x1a8>
		}
	}
	

}
 5ba:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <gny>
	if(readpin && !(gny&((uint32_t)1<<intmp)) ) //lenyomas gomb
	{
		gny=gny|((uint32_t)1<<intmp);
	}

	if(!(readpin) && (gny&((uint32_t)1<<intmp)) ) //felengedés
 5be:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <gny+0x1>
 5c2:	a0 91 36 02 	lds	r26, 0x0236	; 0x800236 <gny+0x2>
 5c6:	b0 91 37 02 	lds	r27, 0x0237	; 0x800237 <gny+0x3>
 5ca:	02 2e       	mov	r0, r18
 5cc:	04 c0       	rjmp	.+8      	; 0x5d6 <set_relay+0x1a0>
 5ce:	b6 95       	lsr	r27
 5d0:	a7 95       	ror	r26
 5d2:	97 95       	ror	r25
 5d4:	87 95       	ror	r24
 5d6:	0a 94       	dec	r0
 5d8:	d2 f7       	brpl	.-12     	; 0x5ce <set_relay+0x198>
 5da:	80 fd       	sbrc	r24, 0
 5dc:	6f cf       	rjmp	.-290    	; 0x4bc <set_relay+0x86>
 5de:	1f 91       	pop	r17
			relay_out(setrelay,0);
		}
	}
	

}
 5e0:	0f 91       	pop	r16
 5e2:	ff 90       	pop	r15
 5e4:	ef 90       	pop	r14
 5e6:	df 90       	pop	r13
 5e8:	cf 90       	pop	r12
 5ea:	bf 90       	pop	r11
 5ec:	af 90       	pop	r10
 5ee:	9f 90       	pop	r9
 5f0:	8f 90       	pop	r8
 5f2:	7f 90       	pop	r7
 5f4:	6f 90       	pop	r6
 5f6:	5f 90       	pop	r5
 5f8:	4f 90       	pop	r4
 5fa:	08 95       	ret

000005fc <set_relay_mqtt>:
 5fc:	af 92       	push	r10

void set_relay_mqtt (char* topic,char* state)
{
 5fe:	bf 92       	push	r11
 600:	cf 92       	push	r12
 602:	df 92       	push	r13
 604:	ef 92       	push	r14
 606:	ff 92       	push	r15
 608:	1f 93       	push	r17
 60a:	cf 93       	push	r28
 60c:	df 93       	push	r29
 60e:	ec 01       	movw	r28, r24
 610:	5b 01       	movw	r10, r22
	
	uint32_t setrelay=0;
	uint8_t intmp=0;
 	
	if (strcmp(topic,"PA3")==0) {setrelay=RelayPA3; intmp=TMPPF4;}
 612:	68 e1       	ldi	r22, 0x18	; 24
 614:	71 e0       	ldi	r23, 0x01	; 1
 616:	3a d3       	rcall	.+1652   	; 0xc8c <strcmp>
 618:	89 2b       	or	r24, r25
 61a:	39 f4       	brne	.+14     	; 0x62a <set_relay_mqtt+0x2e>
 61c:	14 e0       	ldi	r17, 0x04	; 4
 61e:	c1 2c       	mov	r12, r1
 620:	d1 2c       	mov	r13, r1
 622:	76 01       	movw	r14, r12
 624:	68 94       	set
 626:	c3 f8       	bld	r12, 3
 628:	04 c0       	rjmp	.+8      	; 0x632 <set_relay_mqtt+0x36>

void set_relay_mqtt (char* topic,char* state)
{
	
	uint32_t setrelay=0;
	uint8_t intmp=0;
 62a:	10 e0       	ldi	r17, 0x00	; 0
}

void set_relay_mqtt (char* topic,char* state)
{
	
	uint32_t setrelay=0;
 62c:	c1 2c       	mov	r12, r1
 62e:	d1 2c       	mov	r13, r1
 630:	76 01       	movw	r14, r12
	uint8_t intmp=0;
 	
	if (strcmp(topic,"PA3")==0) {setrelay=RelayPA3; intmp=TMPPF4;}
	if (strcmp(topic,"PA4")==0) {setrelay=RelayPA4; intmp=TMPPF3;}
 632:	6c e1       	ldi	r22, 0x1C	; 28
 634:	71 e0       	ldi	r23, 0x01	; 1
 636:	ce 01       	movw	r24, r28
 638:	29 d3       	rcall	.+1618   	; 0xc8c <strcmp>
 63a:	89 2b       	or	r24, r25
 63c:	31 f4       	brne	.+12     	; 0x64a <set_relay_mqtt+0x4e>
 63e:	13 e0       	ldi	r17, 0x03	; 3
 640:	c1 2c       	mov	r12, r1
 642:	d1 2c       	mov	r13, r1
 644:	76 01       	movw	r14, r12
 646:	68 94       	set
 648:	c4 f8       	bld	r12, 4
	if (strcmp(topic,"PA5")==0) {setrelay=RelayPA5; intmp=TMPPF2;}
 64a:	60 e2       	ldi	r22, 0x20	; 32
 64c:	71 e0       	ldi	r23, 0x01	; 1
 64e:	ce 01       	movw	r24, r28
 650:	1d d3       	rcall	.+1594   	; 0xc8c <strcmp>
 652:	89 2b       	or	r24, r25
 654:	31 f4       	brne	.+12     	; 0x662 <set_relay_mqtt+0x66>
 656:	12 e0       	ldi	r17, 0x02	; 2
 658:	c1 2c       	mov	r12, r1
 65a:	d1 2c       	mov	r13, r1
 65c:	76 01       	movw	r14, r12
 65e:	68 94       	set
 660:	c5 f8       	bld	r12, 5
	if (strcmp(topic,"PA6")==0) {setrelay=RelayPA6; intmp=TMPPF1;}
 662:	64 e2       	ldi	r22, 0x24	; 36
 664:	71 e0       	ldi	r23, 0x01	; 1
 666:	ce 01       	movw	r24, r28
 668:	11 d3       	rcall	.+1570   	; 0xc8c <strcmp>
 66a:	89 2b       	or	r24, r25
 66c:	31 f4       	brne	.+12     	; 0x67a <set_relay_mqtt+0x7e>
 66e:	11 e0       	ldi	r17, 0x01	; 1
 670:	c1 2c       	mov	r12, r1
 672:	d1 2c       	mov	r13, r1
 674:	76 01       	movw	r14, r12
 676:	68 94       	set
 678:	c6 f8       	bld	r12, 6
	if (strcmp(topic,"PA7")==0) {setrelay=RelayPA7; intmp=TMPPF0;}
 67a:	68 e2       	ldi	r22, 0x28	; 40
 67c:	71 e0       	ldi	r23, 0x01	; 1
 67e:	ce 01       	movw	r24, r28
 680:	05 d3       	rcall	.+1546   	; 0xc8c <strcmp>
 682:	89 2b       	or	r24, r25
 684:	31 f4       	brne	.+12     	; 0x692 <set_relay_mqtt+0x96>
 686:	10 e0       	ldi	r17, 0x00	; 0
 688:	c1 2c       	mov	r12, r1
 68a:	d1 2c       	mov	r13, r1
 68c:	76 01       	movw	r14, r12
 68e:	68 94       	set
 690:	c7 f8       	bld	r12, 7
	
	if (strcmp(topic,"PC0")==0) {setrelay=RelayPC0; intmp=TMPPE7;}
 692:	6c e2       	ldi	r22, 0x2C	; 44
 694:	71 e0       	ldi	r23, 0x01	; 1
 696:	ce 01       	movw	r24, r28
 698:	f9 d2       	rcall	.+1522   	; 0xc8c <strcmp>
 69a:	89 2b       	or	r24, r25
 69c:	29 f4       	brne	.+10     	; 0x6a8 <set_relay_mqtt+0xac>
 69e:	1f e0       	ldi	r17, 0x0F	; 15
 6a0:	c1 2c       	mov	r12, r1
 6a2:	d1 2c       	mov	r13, r1
 6a4:	76 01       	movw	r14, r12
 6a6:	d3 94       	inc	r13
	if (strcmp(topic,"PC1")==0) {setrelay=RelayPC1; intmp=TMPPE6;}
 6a8:	60 e3       	ldi	r22, 0x30	; 48
 6aa:	71 e0       	ldi	r23, 0x01	; 1
 6ac:	ce 01       	movw	r24, r28
 6ae:	ee d2       	rcall	.+1500   	; 0xc8c <strcmp>
 6b0:	89 2b       	or	r24, r25
 6b2:	31 f4       	brne	.+12     	; 0x6c0 <set_relay_mqtt+0xc4>
 6b4:	1e e0       	ldi	r17, 0x0E	; 14
 6b6:	c1 2c       	mov	r12, r1
 6b8:	d1 2c       	mov	r13, r1
 6ba:	76 01       	movw	r14, r12
 6bc:	68 94       	set
 6be:	d1 f8       	bld	r13, 1
	if (strcmp(topic,"PC2")==0) {setrelay=RelayPC2; intmp=TMPPE5;}
 6c0:	64 e3       	ldi	r22, 0x34	; 52
 6c2:	71 e0       	ldi	r23, 0x01	; 1
 6c4:	ce 01       	movw	r24, r28
 6c6:	e2 d2       	rcall	.+1476   	; 0xc8c <strcmp>
 6c8:	89 2b       	or	r24, r25
 6ca:	31 f4       	brne	.+12     	; 0x6d8 <set_relay_mqtt+0xdc>
 6cc:	1d e0       	ldi	r17, 0x0D	; 13
 6ce:	c1 2c       	mov	r12, r1
 6d0:	d1 2c       	mov	r13, r1
 6d2:	76 01       	movw	r14, r12
 6d4:	68 94       	set
 6d6:	d2 f8       	bld	r13, 2
	if (strcmp(topic,"PC3")==0) {setrelay=RelayPC3; intmp=TMPPE4;}
 6d8:	68 e3       	ldi	r22, 0x38	; 56
 6da:	71 e0       	ldi	r23, 0x01	; 1
 6dc:	ce 01       	movw	r24, r28
 6de:	d6 d2       	rcall	.+1452   	; 0xc8c <strcmp>
 6e0:	89 2b       	or	r24, r25
 6e2:	31 f4       	brne	.+12     	; 0x6f0 <set_relay_mqtt+0xf4>
 6e4:	1c e0       	ldi	r17, 0x0C	; 12
 6e6:	c1 2c       	mov	r12, r1
 6e8:	d1 2c       	mov	r13, r1
 6ea:	76 01       	movw	r14, r12
 6ec:	68 94       	set
 6ee:	d3 f8       	bld	r13, 3
	if (strcmp(topic,"PC4")==0) {setrelay=RelayPC4; intmp=TMPPE3;}
 6f0:	6c e3       	ldi	r22, 0x3C	; 60
 6f2:	71 e0       	ldi	r23, 0x01	; 1
 6f4:	ce 01       	movw	r24, r28
 6f6:	ca d2       	rcall	.+1428   	; 0xc8c <strcmp>
 6f8:	89 2b       	or	r24, r25
 6fa:	31 f4       	brne	.+12     	; 0x708 <set_relay_mqtt+0x10c>
 6fc:	1b e0       	ldi	r17, 0x0B	; 11
 6fe:	c1 2c       	mov	r12, r1
 700:	d1 2c       	mov	r13, r1
 702:	76 01       	movw	r14, r12
 704:	68 94       	set
 706:	d4 f8       	bld	r13, 4
	if (strcmp(topic,"PC5")==0) {setrelay=RelayPC5; intmp=TMPPE2;}	
 708:	60 e4       	ldi	r22, 0x40	; 64
 70a:	71 e0       	ldi	r23, 0x01	; 1
 70c:	ce 01       	movw	r24, r28
 70e:	be d2       	rcall	.+1404   	; 0xc8c <strcmp>
 710:	89 2b       	or	r24, r25
 712:	31 f4       	brne	.+12     	; 0x720 <set_relay_mqtt+0x124>
 714:	1a e0       	ldi	r17, 0x0A	; 10
 716:	c1 2c       	mov	r12, r1
 718:	d1 2c       	mov	r13, r1
 71a:	76 01       	movw	r14, r12
 71c:	68 94       	set
 71e:	d5 f8       	bld	r13, 5
	if (strcmp(topic,"PC6")==0) {setrelay=RelayPC6; intmp=TMPPE1;}
 720:	64 e4       	ldi	r22, 0x44	; 68
 722:	71 e0       	ldi	r23, 0x01	; 1
 724:	ce 01       	movw	r24, r28
 726:	b2 d2       	rcall	.+1380   	; 0xc8c <strcmp>
 728:	89 2b       	or	r24, r25
 72a:	31 f4       	brne	.+12     	; 0x738 <set_relay_mqtt+0x13c>
 72c:	19 e0       	ldi	r17, 0x09	; 9
 72e:	c1 2c       	mov	r12, r1
 730:	d1 2c       	mov	r13, r1
 732:	76 01       	movw	r14, r12
 734:	68 94       	set
 736:	d6 f8       	bld	r13, 6
	if (strcmp(topic,"PC7")==0) {setrelay=RelayPC7; intmp=TMPPE0;}
 738:	68 e4       	ldi	r22, 0x48	; 72
 73a:	71 e0       	ldi	r23, 0x01	; 1
 73c:	ce 01       	movw	r24, r28
 73e:	a6 d2       	rcall	.+1356   	; 0xc8c <strcmp>
 740:	89 2b       	or	r24, r25
 742:	31 f4       	brne	.+12     	; 0x750 <set_relay_mqtt+0x154>
 744:	18 e0       	ldi	r17, 0x08	; 8
 746:	c1 2c       	mov	r12, r1
 748:	d1 2c       	mov	r13, r1
 74a:	76 01       	movw	r14, r12
 74c:	68 94       	set
 74e:	d7 f8       	bld	r13, 7
		
	if (strcmp(topic,"PD5")==0) {setrelay=RelayPD5; intmp=TMPPB7;}
 750:	6c e4       	ldi	r22, 0x4C	; 76
 752:	71 e0       	ldi	r23, 0x01	; 1
 754:	ce 01       	movw	r24, r28
 756:	9a d2       	rcall	.+1332   	; 0xc8c <strcmp>
 758:	89 2b       	or	r24, r25
 75a:	31 f4       	brne	.+12     	; 0x768 <set_relay_mqtt+0x16c>
 75c:	17 e1       	ldi	r17, 0x17	; 23
 75e:	c1 2c       	mov	r12, r1
 760:	d1 2c       	mov	r13, r1
 762:	76 01       	movw	r14, r12
 764:	68 94       	set
 766:	e5 f8       	bld	r14, 5
	if (strcmp(topic,"PD6")==0) {setrelay=RelayPD6; intmp=TMPPB6;}
 768:	60 e5       	ldi	r22, 0x50	; 80
 76a:	71 e0       	ldi	r23, 0x01	; 1
 76c:	ce 01       	movw	r24, r28
 76e:	8e d2       	rcall	.+1308   	; 0xc8c <strcmp>
 770:	89 2b       	or	r24, r25
 772:	31 f4       	brne	.+12     	; 0x780 <set_relay_mqtt+0x184>
 774:	16 e1       	ldi	r17, 0x16	; 22
 776:	c1 2c       	mov	r12, r1
 778:	d1 2c       	mov	r13, r1
 77a:	76 01       	movw	r14, r12
 77c:	68 94       	set
 77e:	e6 f8       	bld	r14, 6
	if (strcmp(topic,"PD7")==0) {setrelay=RelayPD7; intmp=TMPPB5;}
 780:	64 e5       	ldi	r22, 0x54	; 84
 782:	71 e0       	ldi	r23, 0x01	; 1
 784:	ce 01       	movw	r24, r28
 786:	82 d2       	rcall	.+1284   	; 0xc8c <strcmp>
 788:	89 2b       	or	r24, r25
 78a:	31 f4       	brne	.+12     	; 0x798 <set_relay_mqtt+0x19c>
 78c:	15 e1       	ldi	r17, 0x15	; 21
 78e:	c1 2c       	mov	r12, r1
 790:	d1 2c       	mov	r13, r1
 792:	76 01       	movw	r14, r12
 794:	68 94       	set
 796:	e7 f8       	bld	r14, 7


	if (strcmp(state,"ON")==0 )
 798:	68 e5       	ldi	r22, 0x58	; 88
 79a:	71 e0       	ldi	r23, 0x01	; 1
 79c:	c5 01       	movw	r24, r10
 79e:	76 d2       	rcall	.+1260   	; 0xc8c <strcmp>
 7a0:	89 2b       	or	r24, r25
 7a2:	21 f5       	brne	.+72     	; 0x7ec <set_relay_mqtt+0x1f0>
 7a4:	40 91 30 02 	lds	r20, 0x0230	; 0x800230 <__data_end>
		{
		lampa|=((uint32_t)1<<intmp);
 7a8:	50 91 31 02 	lds	r21, 0x0231	; 0x800231 <__data_end+0x1>
 7ac:	60 91 32 02 	lds	r22, 0x0232	; 0x800232 <__data_end+0x2>
 7b0:	70 91 33 02 	lds	r23, 0x0233	; 0x800233 <__data_end+0x3>
 7b4:	81 e0       	ldi	r24, 0x01	; 1
 7b6:	90 e0       	ldi	r25, 0x00	; 0
 7b8:	a0 e0       	ldi	r26, 0x00	; 0
 7ba:	b0 e0       	ldi	r27, 0x00	; 0
 7bc:	01 2e       	mov	r0, r17
 7be:	04 c0       	rjmp	.+8      	; 0x7c8 <set_relay_mqtt+0x1cc>
 7c0:	88 0f       	add	r24, r24
 7c2:	99 1f       	adc	r25, r25
 7c4:	aa 1f       	adc	r26, r26
 7c6:	bb 1f       	adc	r27, r27
 7c8:	0a 94       	dec	r0
 7ca:	d2 f7       	brpl	.-12     	; 0x7c0 <set_relay_mqtt+0x1c4>
 7cc:	84 2b       	or	r24, r20
 7ce:	95 2b       	or	r25, r21
 7d0:	a6 2b       	or	r26, r22
 7d2:	b7 2b       	or	r27, r23
 7d4:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <__data_end>
 7d8:	90 93 31 02 	sts	0x0231, r25	; 0x800231 <__data_end+0x1>
 7dc:	a0 93 32 02 	sts	0x0232, r26	; 0x800232 <__data_end+0x2>
 7e0:	b0 93 33 02 	sts	0x0233, r27	; 0x800233 <__data_end+0x3>
		relay_out(setrelay,1);
 7e4:	41 e0       	ldi	r20, 0x01	; 1
 7e6:	c7 01       	movw	r24, r14
 7e8:	b6 01       	movw	r22, r12
 7ea:	7b dc       	rcall	.-1802   	; 0xe2 <relay_out>
		}
	
	if(strcmp(state,"OFF")==0)
 7ec:	6b e5       	ldi	r22, 0x5B	; 91
 7ee:	71 e0       	ldi	r23, 0x01	; 1
 7f0:	c5 01       	movw	r24, r10
 7f2:	4c d2       	rcall	.+1176   	; 0xc8c <strcmp>
 7f4:	89 2b       	or	r24, r25
 7f6:	39 f5       	brne	.+78     	; 0x846 <set_relay_mqtt+0x24a>
 7f8:	40 91 30 02 	lds	r20, 0x0230	; 0x800230 <__data_end>
		{
		lampa&=(~((uint32_t)1<<intmp));
 7fc:	50 91 31 02 	lds	r21, 0x0231	; 0x800231 <__data_end+0x1>
 800:	60 91 32 02 	lds	r22, 0x0232	; 0x800232 <__data_end+0x2>
 804:	70 91 33 02 	lds	r23, 0x0233	; 0x800233 <__data_end+0x3>
 808:	81 e0       	ldi	r24, 0x01	; 1
 80a:	90 e0       	ldi	r25, 0x00	; 0
 80c:	a0 e0       	ldi	r26, 0x00	; 0
 80e:	b0 e0       	ldi	r27, 0x00	; 0
 810:	04 c0       	rjmp	.+8      	; 0x81a <set_relay_mqtt+0x21e>
 812:	88 0f       	add	r24, r24
 814:	99 1f       	adc	r25, r25
 816:	aa 1f       	adc	r26, r26
 818:	bb 1f       	adc	r27, r27
 81a:	1a 95       	dec	r17
 81c:	d2 f7       	brpl	.-12     	; 0x812 <set_relay_mqtt+0x216>
 81e:	80 95       	com	r24
 820:	90 95       	com	r25
 822:	a0 95       	com	r26
 824:	b0 95       	com	r27
 826:	84 23       	and	r24, r20
 828:	95 23       	and	r25, r21
 82a:	a6 23       	and	r26, r22
 82c:	b7 23       	and	r27, r23
 82e:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <__data_end>
 832:	90 93 31 02 	sts	0x0231, r25	; 0x800231 <__data_end+0x1>
 836:	a0 93 32 02 	sts	0x0232, r26	; 0x800232 <__data_end+0x2>
 83a:	b0 93 33 02 	sts	0x0233, r27	; 0x800233 <__data_end+0x3>
		relay_out(setrelay,0);
 83e:	40 e0       	ldi	r20, 0x00	; 0
 840:	c7 01       	movw	r24, r14
 842:	b6 01       	movw	r22, r12
 844:	4e dc       	rcall	.-1892   	; 0xe2 <relay_out>
 846:	df 91       	pop	r29
		}
	

}
 848:	cf 91       	pop	r28
 84a:	1f 91       	pop	r17
 84c:	ff 90       	pop	r15
 84e:	ef 90       	pop	r14
 850:	df 90       	pop	r13
 852:	cf 90       	pop	r12
 854:	bf 90       	pop	r11
 856:	af 90       	pop	r10
 858:	08 95       	ret

0000085a <timerini>:
#include <avr/interrupt.h>
#include "timer.h"

void timerini() // timer megszakitás 100 ms enként, gomb polling
{
	TCCR1A = 0x80;
 85a:	80 e8       	ldi	r24, 0x80	; 128
 85c:	8f bd       	out	0x2f, r24	; 47
	TCCR1B = 0x0B;
 85e:	8b e0       	ldi	r24, 0x0B	; 11
 860:	8e bd       	out	0x2e, r24	; 46
	OCR1AH = 0x30;
 862:	80 e3       	ldi	r24, 0x30	; 48
 864:	8b bd       	out	0x2b, r24	; 43
	OCR1AL = 0xD3;
 866:	83 ed       	ldi	r24, 0xD3	; 211
 868:	8a bd       	out	0x2a, r24	; 42
	TIMSK = 0b00010001;
 86a:	81 e1       	ldi	r24, 0x11	; 17
 86c:	87 bf       	out	0x37, r24	; 55
	sei();
 86e:	78 94       	sei
 870:	08 95       	ret

00000872 <USART_init>:

unsigned char USART1_receive(void)
{
	while(!(UCSR1A & (1<<RXC1)));
	return UDR1;
}
 872:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
 876:	23 e3       	ldi	r18, 0x33	; 51
 878:	29 b9       	out	0x09, r18	; 9
 87a:	98 e9       	ldi	r25, 0x98	; 152
 87c:	9a b9       	out	0x0a, r25	; 10
 87e:	86 e0       	ldi	r24, 0x06	; 6
 880:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
 884:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 888:	20 93 99 00 	sts	0x0099, r18	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 88c:	90 93 9a 00 	sts	0x009A, r25	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
 890:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <__TEXT_REGION_LENGTH__+0x7e009d>
 894:	08 95       	ret

00000896 <USART0_receive>:
 896:	5f 9b       	sbis	0x0b, 7	; 11
 898:	fe cf       	rjmp	.-4      	; 0x896 <USART0_receive>
 89a:	8c b1       	in	r24, 0x0c	; 12
 89c:	08 95       	ret

0000089e <USART0_send>:
 89e:	5d 9b       	sbis	0x0b, 5	; 11
 8a0:	fe cf       	rjmp	.-4      	; 0x89e <USART0_send>
 8a2:	8c b9       	out	0x0c, r24	; 12
 8a4:	08 95       	ret

000008a6 <USART0_putstring>:
 8a6:	cf 93       	push	r28
 8a8:	df 93       	push	r29
 8aa:	ec 01       	movw	r28, r24
 8ac:	88 81       	ld	r24, Y
 8ae:	88 23       	and	r24, r24
 8b0:	29 f0       	breq	.+10     	; 0x8bc <USART0_putstring+0x16>
 8b2:	21 96       	adiw	r28, 0x01	; 1
 8b4:	f4 df       	rcall	.-24     	; 0x89e <USART0_send>
 8b6:	89 91       	ld	r24, Y+
 8b8:	81 11       	cpse	r24, r1
 8ba:	fc cf       	rjmp	.-8      	; 0x8b4 <USART0_putstring+0xe>
 8bc:	df 91       	pop	r29
 8be:	cf 91       	pop	r28
 8c0:	08 95       	ret

000008c2 <USART1_send>:

void USART1_send( unsigned char data)
{
	while(!(UCSR1A & (1<<UDRE1)));
 8c2:	eb e9       	ldi	r30, 0x9B	; 155
 8c4:	f0 e0       	ldi	r31, 0x00	; 0
 8c6:	90 81       	ld	r25, Z
 8c8:	95 ff       	sbrs	r25, 5
 8ca:	fd cf       	rjmp	.-6      	; 0x8c6 <USART1_send+0x4>
	UDR1 = data;
 8cc:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 8d0:	08 95       	ret

000008d2 <USART1_putstring>:
}

void USART1_putstring(char* StringPtr)
{
 8d2:	cf 93       	push	r28
 8d4:	df 93       	push	r29
 8d6:	ec 01       	movw	r28, r24
	while(*StringPtr != 0x00){
 8d8:	88 81       	ld	r24, Y
 8da:	88 23       	and	r24, r24
 8dc:	29 f0       	breq	.+10     	; 0x8e8 <USART1_putstring+0x16>
 8de:	21 96       	adiw	r28, 0x01	; 1
		USART1_send(*StringPtr);
 8e0:	f0 df       	rcall	.-32     	; 0x8c2 <USART1_send>
	UDR1 = data;
}

void USART1_putstring(char* StringPtr)
{
	while(*StringPtr != 0x00){
 8e2:	89 91       	ld	r24, Y+
 8e4:	81 11       	cpse	r24, r1
 8e6:	fc cf       	rjmp	.-8      	; 0x8e0 <USART1_putstring+0xe>
		USART1_send(*StringPtr);
	StringPtr++;}
}
 8e8:	df 91       	pop	r29
 8ea:	cf 91       	pop	r28
 8ec:	08 95       	ret

000008ee <MQTT_command_read>:

unsigned char MQTT_command_read()
{
 8ee:	1f 93       	push	r17
 8f0:	cf 93       	push	r28
 8f2:	df 93       	push	r29
RXstring[str]=USART0_receive();
 8f4:	c0 91 4c 02 	lds	r28, 0x024C	; 0x80024c <str>
 8f8:	d0 e0       	ldi	r29, 0x00	; 0
 8fa:	cd df       	rcall	.-102    	; 0x896 <USART0_receive>
 8fc:	ca 5e       	subi	r28, 0xEA	; 234
 8fe:	dc 4f       	sbci	r29, 0xFC	; 252
 900:	88 83       	st	Y, r24
available++;
 902:	60 91 4b 02 	lds	r22, 0x024B	; 0x80024b <available>
 906:	6f 5f       	subi	r22, 0xFF	; 255
 908:	60 93 4b 02 	sts	0x024B, r22	; 0x80024b <available>

if (RXstring[str]=='\n')
 90c:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <str>
 910:	e8 2f       	mov	r30, r24
 912:	f0 e0       	ldi	r31, 0x00	; 0
 914:	ea 5e       	subi	r30, 0xEA	; 234
 916:	fc 4f       	sbci	r31, 0xFC	; 252
 918:	90 81       	ld	r25, Z
 91a:	9a 30       	cpi	r25, 0x0A	; 10
 91c:	09 f0       	breq	.+2      	; 0x920 <MQTT_command_read+0x32>
 91e:	85 c0       	rjmp	.+266    	; 0xa2a <MQTT_command_read+0x13c>
	{
		for(sep=0,str=0,toptmp=0,statmp=0;str<(available-1);)
 920:	10 92 4a 02 	sts	0x024A, r1	; 0x80024a <sep>
 924:	10 92 4c 02 	sts	0x024C, r1	; 0x80024c <str>
 928:	10 92 49 02 	sts	0x0249, r1	; 0x800249 <toptmp>
 92c:	10 92 48 02 	sts	0x0248, r1	; 0x800248 <statmp>
 930:	b0 e0       	ldi	r27, 0x00	; 0
 932:	10 e0       	ldi	r17, 0x00	; 0
 934:	20 e0       	ldi	r18, 0x00	; 0
 936:	30 e0       	ldi	r19, 0x00	; 0
 938:	70 e0       	ldi	r23, 0x00	; 0
 93a:	61 50       	subi	r22, 0x01	; 1
 93c:	71 09       	sbc	r23, r1
			if (RXstring[str]==':')  {sep=2; str++;}
			
			if (sep==1)
			{
				topic[toptmp++]=RXstring[str++];
				topic[toptmp]=0x00;
 93e:	a1 e0       	ldi	r26, 0x01	; 1
		for(sep=0,str=0,toptmp=0,statmp=0;str<(available-1);)
		{
			if (RXstring[str]=='/')  {sep=1; str++;}
			if (RXstring[str]==':')  {sep=2; str++;}
			
			if (sep==1)
 940:	52 e0       	ldi	r21, 0x02	; 2
RXstring[str]=USART0_receive();
available++;

if (RXstring[str]=='\n')
	{
		for(sep=0,str=0,toptmp=0,statmp=0;str<(available-1);)
 942:	51 c0       	rjmp	.+162    	; 0x9e6 <MQTT_command_read+0xf8>
		{
			if (RXstring[str]=='/')  {sep=1; str++;}
 944:	fc 01       	movw	r30, r24
 946:	ea 5e       	subi	r30, 0xEA	; 234
 948:	fc 4f       	sbci	r31, 0xFC	; 252
 94a:	40 81       	ld	r20, Z
 94c:	4f 32       	cpi	r20, 0x2F	; 47
 94e:	59 f4       	brne	.+22     	; 0x966 <MQTT_command_read+0x78>
 950:	e1 e0       	ldi	r30, 0x01	; 1
 952:	e2 0f       	add	r30, r18
			if (RXstring[str]==':')  {sep=2; str++;}
 954:	8e 2f       	mov	r24, r30
 956:	90 e0       	ldi	r25, 0x00	; 0
 958:	8a 5e       	subi	r24, 0xEA	; 234
 95a:	9c 4f       	sbci	r25, 0xFC	; 252
 95c:	ec 01       	movw	r28, r24
 95e:	88 81       	ld	r24, Y
 960:	8a 33       	cpi	r24, 0x3A	; 58
 962:	81 f4       	brne	.+32     	; 0x984 <MQTT_command_read+0x96>
 964:	07 c0       	rjmp	.+14     	; 0x974 <MQTT_command_read+0x86>
 966:	fc 01       	movw	r30, r24
 968:	ea 5e       	subi	r30, 0xEA	; 234
 96a:	fc 4f       	sbci	r31, 0xFC	; 252
 96c:	80 81       	ld	r24, Z
 96e:	8a 33       	cpi	r24, 0x3A	; 58
 970:	31 f4       	brne	.+12     	; 0x97e <MQTT_command_read+0x90>
 972:	01 c0       	rjmp	.+2      	; 0x976 <MQTT_command_read+0x88>
 974:	2e 2f       	mov	r18, r30
 976:	e1 e0       	ldi	r30, 0x01	; 1
 978:	e2 0f       	add	r30, r18
			
			if (sep==1)
 97a:	35 2f       	mov	r19, r21
 97c:	1c c0       	rjmp	.+56     	; 0x9b6 <MQTT_command_read+0xc8>
 97e:	31 30       	cpi	r19, 0x01	; 1
 980:	b9 f4       	brne	.+46     	; 0x9b0 <MQTT_command_read+0xc2>
 982:	e2 2f       	mov	r30, r18
			{
				topic[toptmp++]=RXstring[str++];
 984:	31 e0       	ldi	r19, 0x01	; 1
 986:	31 0f       	add	r19, r17
 988:	81 2f       	mov	r24, r17
 98a:	90 e0       	ldi	r25, 0x00	; 0
 98c:	21 e0       	ldi	r18, 0x01	; 1
 98e:	2e 0f       	add	r18, r30
 990:	f0 e0       	ldi	r31, 0x00	; 0
 992:	ea 5e       	subi	r30, 0xEA	; 234
 994:	fc 4f       	sbci	r31, 0xFC	; 252
 996:	40 81       	ld	r20, Z
 998:	fc 01       	movw	r30, r24
 99a:	ee 54       	subi	r30, 0x4E	; 78
 99c:	fd 4f       	sbci	r31, 0xFD	; 253
 99e:	40 83       	st	Z, r20
				topic[toptmp]=0x00;
 9a0:	e3 2f       	mov	r30, r19
 9a2:	f0 e0       	ldi	r31, 0x00	; 0
 9a4:	ee 54       	subi	r30, 0x4E	; 78
 9a6:	fd 4f       	sbci	r31, 0xFD	; 253
 9a8:	10 82       	st	Z, r1
			if (RXstring[str]=='/')  {sep=1; str++;}
			if (RXstring[str]==':')  {sep=2; str++;}
			
			if (sep==1)
			{
				topic[toptmp++]=RXstring[str++];
 9aa:	13 2f       	mov	r17, r19
				topic[toptmp]=0x00;
 9ac:	3a 2f       	mov	r19, r26
 9ae:	1b c0       	rjmp	.+54     	; 0x9e6 <MQTT_command_read+0xf8>
			}
			if (sep==2)
 9b0:	32 30       	cpi	r19, 0x02	; 2
 9b2:	b1 f4       	brne	.+44     	; 0x9e0 <MQTT_command_read+0xf2>
 9b4:	e2 2f       	mov	r30, r18
			{
				state[statmp++]=RXstring[str++];
 9b6:	41 e0       	ldi	r20, 0x01	; 1
 9b8:	4b 0f       	add	r20, r27
 9ba:	8b 2f       	mov	r24, r27
 9bc:	90 e0       	ldi	r25, 0x00	; 0
 9be:	21 e0       	ldi	r18, 0x01	; 1
 9c0:	2e 0f       	add	r18, r30
 9c2:	f0 e0       	ldi	r31, 0x00	; 0
 9c4:	ea 5e       	subi	r30, 0xEA	; 234
 9c6:	fc 4f       	sbci	r31, 0xFC	; 252
 9c8:	b0 81       	ld	r27, Z
 9ca:	fc 01       	movw	r30, r24
 9cc:	e2 5b       	subi	r30, 0xB2	; 178
 9ce:	fd 4f       	sbci	r31, 0xFD	; 253
 9d0:	b0 83       	st	Z, r27
				state[statmp]=0x00;
 9d2:	e4 2f       	mov	r30, r20
 9d4:	f0 e0       	ldi	r31, 0x00	; 0
 9d6:	e2 5b       	subi	r30, 0xB2	; 178
 9d8:	fd 4f       	sbci	r31, 0xFD	; 253
 9da:	10 82       	st	Z, r1
				topic[toptmp++]=RXstring[str++];
				topic[toptmp]=0x00;
			}
			if (sep==2)
			{
				state[statmp++]=RXstring[str++];
 9dc:	b4 2f       	mov	r27, r20
 9de:	03 c0       	rjmp	.+6      	; 0x9e6 <MQTT_command_read+0xf8>
				state[statmp]=0x00;
			}
			
			if(sep==0) str++;
 9e0:	31 11       	cpse	r19, r1
 9e2:	01 c0       	rjmp	.+2      	; 0x9e6 <MQTT_command_read+0xf8>
 9e4:	2f 5f       	subi	r18, 0xFF	; 255
RXstring[str]=USART0_receive();
available++;

if (RXstring[str]=='\n')
	{
		for(sep=0,str=0,toptmp=0,statmp=0;str<(available-1);)
 9e6:	82 2f       	mov	r24, r18
 9e8:	90 e0       	ldi	r25, 0x00	; 0
 9ea:	86 17       	cp	r24, r22
 9ec:	97 07       	cpc	r25, r23
 9ee:	0c f4       	brge	.+2      	; 0x9f2 <MQTT_command_read+0x104>
 9f0:	a9 cf       	rjmp	.-174    	; 0x944 <MQTT_command_read+0x56>
 9f2:	30 93 4a 02 	sts	0x024A, r19	; 0x80024a <sep>
 9f6:	20 93 4c 02 	sts	0x024C, r18	; 0x80024c <str>
 9fa:	10 93 49 02 	sts	0x0249, r17	; 0x800249 <toptmp>
 9fe:	b0 93 48 02 	sts	0x0248, r27	; 0x800248 <statmp>
			}
			
			if(sep==0) str++;
		}
		
 		USART1_putstring(state);
 a02:	8e e4       	ldi	r24, 0x4E	; 78
 a04:	92 e0       	ldi	r25, 0x02	; 2
 a06:	65 df       	rcall	.-310    	; 0x8d2 <USART1_putstring>
		USART1_putstring("\n\r");
 a08:	85 e1       	ldi	r24, 0x15	; 21
 a0a:	91 e0       	ldi	r25, 0x01	; 1
 a0c:	62 df       	rcall	.-316    	; 0x8d2 <USART1_putstring>
 		USART1_putstring(topic);
 a0e:	82 eb       	ldi	r24, 0xB2	; 178
 a10:	92 e0       	ldi	r25, 0x02	; 2
 a12:	5f df       	rcall	.-322    	; 0x8d2 <USART1_putstring>
		USART1_putstring("\n\r");
 a14:	85 e1       	ldi	r24, 0x15	; 21
 a16:	91 e0       	ldi	r25, 0x01	; 1
 a18:	5c df       	rcall	.-328    	; 0x8d2 <USART1_putstring>
 a1a:	10 92 4b 02 	sts	0x024B, r1	; 0x80024b <available>
		
		available=0;
 a1e:	10 92 4c 02 	sts	0x024C, r1	; 0x80024c <str>
		str=0;
 a22:	81 e0       	ldi	r24, 0x01	; 1
		RXREAD=1;
 a24:	80 93 47 02 	sts	0x0247, r24	; 0x800247 <RXREAD>
 a28:	03 c0       	rjmp	.+6      	; 0xa30 <MQTT_command_read+0x142>
		return RXREAD;
 a2a:	8f 5f       	subi	r24, 0xFF	; 255
		
		
	}
	else str++;
 a2c:	80 93 4c 02 	sts	0x024C, r24	; 0x80024c <str>
 a30:	df 91       	pop	r29

 a32:	cf 91       	pop	r28
 a34:	1f 91       	pop	r17
 a36:	08 95       	ret

00000a38 <main>:



int main(void)
{
	timerini();
 a38:	10 df       	rcall	.-480    	; 0x85a <timerini>
	portini();
 a3a:	46 db       	rcall	.-2420   	; 0xc8 <portini>
	USART_init();
 a3c:	1a df       	rcall	.-460    	; 0x872 <USART_init>
 a3e:	2f ef       	ldi	r18, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 a40:	80 e7       	ldi	r24, 0x70	; 112
 a42:	92 e0       	ldi	r25, 0x02	; 2
 a44:	21 50       	subi	r18, 0x01	; 1
 a46:	80 40       	sbci	r24, 0x00	; 0
 a48:	90 40       	sbci	r25, 0x00	; 0
 a4a:	e1 f7       	brne	.-8      	; 0xa44 <main+0xc>
 a4c:	00 c0       	rjmp	.+0      	; 0xa4e <main+0x16>
 a4e:	00 00       	nop
 a50:	80 91 4d 02 	lds	r24, 0x024D	; 0x80024d <RXREAD_OK>
	
    while (1) 
    {	
		_delay_ms(100);
		if (RXREAD_OK==1)
 a54:	81 30       	cpi	r24, 0x01	; 1
 a56:	99 f7       	brne	.-26     	; 0xa3e <main+0x6>
 a58:	f8 94       	cli
		{
			cli();
 a5a:	10 92 4d 02 	sts	0x024D, r1	; 0x80024d <RXREAD_OK>
			RXREAD_OK=0;			
 a5e:	6e e4       	ldi	r22, 0x4E	; 78
			set_relay_mqtt(topic,state);
 a60:	72 e0       	ldi	r23, 0x02	; 2
 a62:	82 eb       	ldi	r24, 0xB2	; 178
 a64:	92 e0       	ldi	r25, 0x02	; 2
 a66:	ca dd       	rcall	.-1132   	; 0x5fc <set_relay_mqtt>
 a68:	78 94       	sei
			sei();
 a6a:	e9 cf       	rjmp	.-46     	; 0xa3e <main+0x6>

00000a6c <__vector_12>:
 a6c:	1f 92       	push	r1
		}	
	}
}

ISR(TIMER1_COMPA_vect)
{	
 a6e:	0f 92       	push	r0
 a70:	0f b6       	in	r0, 0x3f	; 63
 a72:	0f 92       	push	r0
 a74:	11 24       	eor	r1, r1
 a76:	0b b6       	in	r0, 0x3b	; 59
 a78:	0f 92       	push	r0
 a7a:	0f 93       	push	r16
 a7c:	1f 93       	push	r17
 a7e:	2f 93       	push	r18
 a80:	3f 93       	push	r19
 a82:	4f 93       	push	r20
 a84:	5f 93       	push	r21
 a86:	6f 93       	push	r22
 a88:	7f 93       	push	r23
 a8a:	8f 93       	push	r24
 a8c:	9f 93       	push	r25
 a8e:	af 93       	push	r26
 a90:	bf 93       	push	r27
 a92:	ef 93       	push	r30
 a94:	ff 93       	push	r31
	ledblink(3); // megszakitás futást jelzo led
 a96:	83 e0       	ldi	r24, 0x03	; 3
 a98:	60 db       	rcall	.-2368   	; 0x15a <ledblink>
	
	
	timer_setrelayfunc();
 a9a:	70 db       	rcall	.-2336   	; 0x17c <timer_setrelayfunc>
 a9c:	80 b1       	in	r24, 0x00	; 0
	
	set_relay(INPF4,RelayPA3,TMPPF4,"setrelay/PF4");
 a9e:	80 95       	com	r24
 aa0:	0f e5       	ldi	r16, 0x5F	; 95
 aa2:	11 e0       	ldi	r17, 0x01	; 1
 aa4:	24 e0       	ldi	r18, 0x04	; 4
 aa6:	48 e0       	ldi	r20, 0x08	; 8
 aa8:	50 e0       	ldi	r21, 0x00	; 0
 aaa:	60 e0       	ldi	r22, 0x00	; 0
 aac:	70 e0       	ldi	r23, 0x00	; 0
 aae:	80 71       	andi	r24, 0x10	; 16
 ab0:	c2 dc       	rcall	.-1660   	; 0x436 <set_relay>
 ab2:	80 b1       	in	r24, 0x00	; 0
	set_relay(INPF3,RelayPA4,TMPPF3,"setrelay/PF3");
 ab4:	80 95       	com	r24
 ab6:	0c e6       	ldi	r16, 0x6C	; 108
 ab8:	11 e0       	ldi	r17, 0x01	; 1
 aba:	23 e0       	ldi	r18, 0x03	; 3
 abc:	40 e1       	ldi	r20, 0x10	; 16
 abe:	50 e0       	ldi	r21, 0x00	; 0
 ac0:	60 e0       	ldi	r22, 0x00	; 0
 ac2:	70 e0       	ldi	r23, 0x00	; 0
 ac4:	88 70       	andi	r24, 0x08	; 8
 ac6:	b7 dc       	rcall	.-1682   	; 0x436 <set_relay>
 ac8:	80 b1       	in	r24, 0x00	; 0
	set_relay(INPF2,RelayPA5,TMPPF2,"setrelay/PF2");
 aca:	80 95       	com	r24
 acc:	09 e7       	ldi	r16, 0x79	; 121
 ace:	11 e0       	ldi	r17, 0x01	; 1
 ad0:	22 e0       	ldi	r18, 0x02	; 2
 ad2:	40 e2       	ldi	r20, 0x20	; 32
 ad4:	50 e0       	ldi	r21, 0x00	; 0
 ad6:	60 e0       	ldi	r22, 0x00	; 0
 ad8:	70 e0       	ldi	r23, 0x00	; 0
 ada:	84 70       	andi	r24, 0x04	; 4
 adc:	ac dc       	rcall	.-1704   	; 0x436 <set_relay>
 ade:	80 b1       	in	r24, 0x00	; 0
	set_relay(INPF1,RelayPA6,TMPPF1,"setrelay/PF1");
 ae0:	80 95       	com	r24
 ae2:	06 e8       	ldi	r16, 0x86	; 134
 ae4:	11 e0       	ldi	r17, 0x01	; 1
 ae6:	21 e0       	ldi	r18, 0x01	; 1
 ae8:	40 e4       	ldi	r20, 0x40	; 64
 aea:	50 e0       	ldi	r21, 0x00	; 0
 aec:	60 e0       	ldi	r22, 0x00	; 0
 aee:	70 e0       	ldi	r23, 0x00	; 0
 af0:	82 70       	andi	r24, 0x02	; 2
 af2:	a1 dc       	rcall	.-1726   	; 0x436 <set_relay>
 af4:	80 b1       	in	r24, 0x00	; 0
	set_relay(INPF0,RelayPA7,TMPPF0,"setrelay/PF0");
 af6:	80 95       	com	r24
 af8:	03 e9       	ldi	r16, 0x93	; 147
 afa:	11 e0       	ldi	r17, 0x01	; 1
 afc:	20 e0       	ldi	r18, 0x00	; 0
 afe:	40 e8       	ldi	r20, 0x80	; 128
 b00:	50 e0       	ldi	r21, 0x00	; 0
 b02:	60 e0       	ldi	r22, 0x00	; 0
 b04:	70 e0       	ldi	r23, 0x00	; 0
 b06:	81 70       	andi	r24, 0x01	; 1
 b08:	96 dc       	rcall	.-1748   	; 0x436 <set_relay>
 b0a:	80 b3       	in	r24, 0x10	; 16

	set_relay(INPE0,RelayPC7,TMPPE0,"setrelay/PE0");
 b0c:	80 95       	com	r24
 b0e:	00 ea       	ldi	r16, 0xA0	; 160
 b10:	11 e0       	ldi	r17, 0x01	; 1
 b12:	28 e0       	ldi	r18, 0x08	; 8
 b14:	40 e0       	ldi	r20, 0x00	; 0
 b16:	50 e8       	ldi	r21, 0x80	; 128
 b18:	60 e0       	ldi	r22, 0x00	; 0
 b1a:	70 e0       	ldi	r23, 0x00	; 0
 b1c:	82 70       	andi	r24, 0x02	; 2
 b1e:	8b dc       	rcall	.-1770   	; 0x436 <set_relay>
 b20:	80 b3       	in	r24, 0x10	; 16
	set_relay(INPE1,RelayPC6,TMPPE1,"setrelay/PE1");
 b22:	80 95       	com	r24
 b24:	0d ea       	ldi	r16, 0xAD	; 173
 b26:	11 e0       	ldi	r17, 0x01	; 1
 b28:	29 e0       	ldi	r18, 0x09	; 9
 b2a:	40 e0       	ldi	r20, 0x00	; 0
 b2c:	50 e4       	ldi	r21, 0x40	; 64
 b2e:	60 e0       	ldi	r22, 0x00	; 0
 b30:	70 e0       	ldi	r23, 0x00	; 0
 b32:	80 71       	andi	r24, 0x10	; 16
 b34:	80 dc       	rcall	.-1792   	; 0x436 <set_relay>
 b36:	81 b1       	in	r24, 0x01	; 1
	set_relay(INPE2,RelayPC5,TMPPE2,"setrelay/PE2");
 b38:	80 95       	com	r24
 b3a:	0a eb       	ldi	r16, 0xBA	; 186
 b3c:	11 e0       	ldi	r17, 0x01	; 1
 b3e:	2a e0       	ldi	r18, 0x0A	; 10
 b40:	40 e0       	ldi	r20, 0x00	; 0
 b42:	50 e2       	ldi	r21, 0x20	; 32
 b44:	60 e0       	ldi	r22, 0x00	; 0
 b46:	70 e0       	ldi	r23, 0x00	; 0
 b48:	84 70       	andi	r24, 0x04	; 4
 b4a:	75 dc       	rcall	.-1814   	; 0x436 <set_relay>
 b4c:	81 b1       	in	r24, 0x01	; 1
	set_relay(INPE3,RelayPC4,TMPPE3,"setrelay/PE3");
 b4e:	80 95       	com	r24
 b50:	07 ec       	ldi	r16, 0xC7	; 199
 b52:	11 e0       	ldi	r17, 0x01	; 1
 b54:	2b e0       	ldi	r18, 0x0B	; 11
 b56:	40 e0       	ldi	r20, 0x00	; 0
 b58:	50 e1       	ldi	r21, 0x10	; 16
 b5a:	60 e0       	ldi	r22, 0x00	; 0
 b5c:	70 e0       	ldi	r23, 0x00	; 0
 b5e:	88 70       	andi	r24, 0x08	; 8
 b60:	6a dc       	rcall	.-1836   	; 0x436 <set_relay>
 b62:	81 b1       	in	r24, 0x01	; 1
	set_relay(INPE4,RelayPC3,TMPPE4,"setrelay/PE4");
 b64:	80 95       	com	r24
 b66:	04 ed       	ldi	r16, 0xD4	; 212
 b68:	11 e0       	ldi	r17, 0x01	; 1
 b6a:	2c e0       	ldi	r18, 0x0C	; 12
 b6c:	40 e0       	ldi	r20, 0x00	; 0
 b6e:	58 e0       	ldi	r21, 0x08	; 8
 b70:	60 e0       	ldi	r22, 0x00	; 0
 b72:	70 e0       	ldi	r23, 0x00	; 0
 b74:	80 71       	andi	r24, 0x10	; 16
 b76:	5f dc       	rcall	.-1858   	; 0x436 <set_relay>
 b78:	81 b1       	in	r24, 0x01	; 1
	set_relay(INPE5,RelayPC2,TMPPE5,"setrelay/PE5");
 b7a:	80 95       	com	r24
 b7c:	01 ee       	ldi	r16, 0xE1	; 225
 b7e:	11 e0       	ldi	r17, 0x01	; 1
 b80:	2d e0       	ldi	r18, 0x0D	; 13
 b82:	40 e0       	ldi	r20, 0x00	; 0
 b84:	54 e0       	ldi	r21, 0x04	; 4
 b86:	60 e0       	ldi	r22, 0x00	; 0
 b88:	70 e0       	ldi	r23, 0x00	; 0
 b8a:	80 72       	andi	r24, 0x20	; 32
 b8c:	54 dc       	rcall	.-1880   	; 0x436 <set_relay>
 b8e:	81 b1       	in	r24, 0x01	; 1
	set_relay(INPE6,RelayPC1,TMPPE6,"setrelay/PE6");
 b90:	80 95       	com	r24
 b92:	0e ee       	ldi	r16, 0xEE	; 238
 b94:	11 e0       	ldi	r17, 0x01	; 1
 b96:	2e e0       	ldi	r18, 0x0E	; 14
 b98:	40 e0       	ldi	r20, 0x00	; 0
 b9a:	52 e0       	ldi	r21, 0x02	; 2
 b9c:	60 e0       	ldi	r22, 0x00	; 0
 b9e:	70 e0       	ldi	r23, 0x00	; 0
 ba0:	80 74       	andi	r24, 0x40	; 64
 ba2:	49 dc       	rcall	.-1902   	; 0x436 <set_relay>
 ba4:	81 b1       	in	r24, 0x01	; 1
	set_relay(INPE7,RelayPC0,TMPPE7,"setrelay/PE7");
 ba6:	80 95       	com	r24
 ba8:	0b ef       	ldi	r16, 0xFB	; 251
 baa:	11 e0       	ldi	r17, 0x01	; 1
 bac:	2f e0       	ldi	r18, 0x0F	; 15
 bae:	40 e0       	ldi	r20, 0x00	; 0
 bb0:	51 e0       	ldi	r21, 0x01	; 1
 bb2:	60 e0       	ldi	r22, 0x00	; 0
 bb4:	70 e0       	ldi	r23, 0x00	; 0
 bb6:	80 78       	andi	r24, 0x80	; 128
 bb8:	3e dc       	rcall	.-1924   	; 0x436 <set_relay>
 bba:	86 b3       	in	r24, 0x16	; 22
	
	set_relay(INPB7,RelayPD5,TMPPB7,"setrelay/PB7");
 bbc:	80 95       	com	r24
 bbe:	08 e0       	ldi	r16, 0x08	; 8
 bc0:	12 e0       	ldi	r17, 0x02	; 2
 bc2:	27 e1       	ldi	r18, 0x17	; 23
 bc4:	40 e0       	ldi	r20, 0x00	; 0
 bc6:	50 e0       	ldi	r21, 0x00	; 0
 bc8:	60 e2       	ldi	r22, 0x20	; 32
 bca:	70 e0       	ldi	r23, 0x00	; 0
 bcc:	80 78       	andi	r24, 0x80	; 128
 bce:	33 dc       	rcall	.-1946   	; 0x436 <set_relay>
 bd0:	86 b3       	in	r24, 0x16	; 22
	set_relay(INPB6,RelayPD6,TMPPB6,"setrelay/PB6");
 bd2:	80 95       	com	r24
 bd4:	05 e1       	ldi	r16, 0x15	; 21
 bd6:	12 e0       	ldi	r17, 0x02	; 2
 bd8:	26 e1       	ldi	r18, 0x16	; 22
 bda:	40 e0       	ldi	r20, 0x00	; 0
 bdc:	50 e0       	ldi	r21, 0x00	; 0
 bde:	60 e4       	ldi	r22, 0x40	; 64
 be0:	70 e0       	ldi	r23, 0x00	; 0
 be2:	80 74       	andi	r24, 0x40	; 64
 be4:	28 dc       	rcall	.-1968   	; 0x436 <set_relay>
 be6:	86 b3       	in	r24, 0x16	; 22
	set_relay(INPB5,RelayPD7,TMPPB5,"setrelay/PB5");
 be8:	80 95       	com	r24
 bea:	02 e2       	ldi	r16, 0x22	; 34
 bec:	12 e0       	ldi	r17, 0x02	; 2
 bee:	25 e1       	ldi	r18, 0x15	; 21
 bf0:	40 e0       	ldi	r20, 0x00	; 0
 bf2:	50 e0       	ldi	r21, 0x00	; 0
 bf4:	60 e8       	ldi	r22, 0x80	; 128
 bf6:	70 e0       	ldi	r23, 0x00	; 0
 bf8:	80 72       	andi	r24, 0x20	; 32
 bfa:	1d dc       	rcall	.-1990   	; 0x436 <set_relay>
 bfc:	ff 91       	pop	r31
 bfe:	ef 91       	pop	r30
}
 c00:	bf 91       	pop	r27
 c02:	af 91       	pop	r26
 c04:	9f 91       	pop	r25
 c06:	8f 91       	pop	r24
 c08:	7f 91       	pop	r23
 c0a:	6f 91       	pop	r22
 c0c:	5f 91       	pop	r21
 c0e:	4f 91       	pop	r20
 c10:	3f 91       	pop	r19
 c12:	2f 91       	pop	r18
 c14:	1f 91       	pop	r17
 c16:	0f 91       	pop	r16
 c18:	0f 90       	pop	r0
 c1a:	0b be       	out	0x3b, r0	; 59
 c1c:	0f 90       	pop	r0
 c1e:	0f be       	out	0x3f, r0	; 63
 c20:	0f 90       	pop	r0
 c22:	1f 90       	pop	r1
 c24:	18 95       	reti

00000c26 <__vector_18>:
 c26:	1f 92       	push	r1
 c28:	0f 92       	push	r0


ISR(USART0_RX_vect)
{	
 c2a:	0f b6       	in	r0, 0x3f	; 63
 c2c:	0f 92       	push	r0
 c2e:	11 24       	eor	r1, r1
 c30:	0b b6       	in	r0, 0x3b	; 59
 c32:	0f 92       	push	r0
 c34:	2f 93       	push	r18
 c36:	3f 93       	push	r19
 c38:	4f 93       	push	r20
 c3a:	5f 93       	push	r21
 c3c:	6f 93       	push	r22
 c3e:	7f 93       	push	r23
 c40:	8f 93       	push	r24
 c42:	9f 93       	push	r25
 c44:	af 93       	push	r26
 c46:	bf 93       	push	r27
 c48:	ef 93       	push	r30
 c4a:	ff 93       	push	r31
	RXREAD_OK=MQTT_command_read();
 c4c:	50 de       	rcall	.-864    	; 0x8ee <MQTT_command_read>
 c4e:	80 93 4d 02 	sts	0x024D, r24	; 0x80024d <RXREAD_OK>
}
 c52:	ff 91       	pop	r31
 c54:	ef 91       	pop	r30
 c56:	bf 91       	pop	r27
 c58:	af 91       	pop	r26
 c5a:	9f 91       	pop	r25
 c5c:	8f 91       	pop	r24
 c5e:	7f 91       	pop	r23
 c60:	6f 91       	pop	r22
 c62:	5f 91       	pop	r21
 c64:	4f 91       	pop	r20
 c66:	3f 91       	pop	r19
 c68:	2f 91       	pop	r18
 c6a:	0f 90       	pop	r0
 c6c:	0b be       	out	0x3b, r0	; 59
 c6e:	0f 90       	pop	r0
 c70:	0f be       	out	0x3f, r0	; 63
 c72:	0f 90       	pop	r0
 c74:	1f 90       	pop	r1
 c76:	18 95       	reti

00000c78 <__vector_30>:


ISR(USART1_RX_vect)
{
 c78:	1f 92       	push	r1
 c7a:	0f 92       	push	r0
 c7c:	0f b6       	in	r0, 0x3f	; 63
 c7e:	0f 92       	push	r0
 c80:	11 24       	eor	r1, r1
	
 c82:	0f 90       	pop	r0
 c84:	0f be       	out	0x3f, r0	; 63
 c86:	0f 90       	pop	r0
 c88:	1f 90       	pop	r1
 c8a:	18 95       	reti

00000c8c <strcmp>:
 c8c:	fb 01       	movw	r30, r22
 c8e:	dc 01       	movw	r26, r24
 c90:	8d 91       	ld	r24, X+
 c92:	01 90       	ld	r0, Z+
 c94:	80 19       	sub	r24, r0
 c96:	01 10       	cpse	r0, r1
 c98:	d9 f3       	breq	.-10     	; 0xc90 <strcmp+0x4>
 c9a:	99 0b       	sbc	r25, r25
 c9c:	08 95       	ret

00000c9e <_exit>:
 c9e:	f8 94       	cli

00000ca0 <__stop_program>:
 ca0:	ff cf       	rjmp	.-2      	; 0xca0 <__stop_program>
